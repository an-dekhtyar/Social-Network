{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/Mypost/Myposts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/Mypost/Post/Post.module.css","reportWebVitals.ts","redux/state.ts","redux/dialogReducer.ts","redux/profileReducer.ts","redux/navbarReducer.ts","components/Header/Header.tsx","components/Navbar/Friends.tsx","components/Navbar/Navbar.tsx","components/Profile/Mypost/Post/Post.tsx","components/Profile/Mypost/Myposts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","_state","profilePageState","posts","id","message","likesAmount","urlImage","newTextPostValue","dialogsPageState","dialogs","name","inMessages","outMessages","newOutMessageText","sideBarState","friends","getState","this","addNewPost","postMessage","newPost","push","changeValuePost","_callSubscriber","newText","addOutMessage","newMessage","changeValueOutMessage","subscriber","observer","dispatch","action","state","type","dialogReducer","profileReducer","navbarReducer","Header","className","s","header","src","Friend","props","friendsBlock","imgFriendsBlock","nameFriendsBlock","Friends","friendsElement","map","f","friendsItem","Navbar","navLinkPages","item","to","activeClassName","active","settingItem","navFriends","Post","Myposts","postElements","p","postsBlock","value","onChange","e","currentTarget","onClick","newPostElement","AddPostCreator","ProfileInfo","profileInfoImg","profileInfoBlock","Profile","content","DialogItem","path","dialog","InMessage","containera","inMessageContain","inMessage","OutMessage","containerb","outMessageContain","outMessage","Dialogs","outMessagesElements","m","inMessagesElement","dialogElements","d","dialogItems","messages","dialogTextArea","placeholder","AddOutMessageCreator","Music","News","Settings","App","render","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.608b0e56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLinkPages\":\"Navbar_navLinkPages__3kovf\",\"item\":\"Navbar_item__WXSVF\",\"active\":\"Navbar_active__u9oOH\",\"friendsBlock\":\"Navbar_friendsBlock__1oJI8\",\"imgFriendsBlock\":\"Navbar_imgFriendsBlock___zgAZ\",\"settingItem\":\"Navbar_settingItem__3Xi8i\",\"friendsItem\":\"Navbar_friendsItem__1B_oh\",\"nameFriendsBlock\":\"Navbar_nameFriendsBlock__1agcI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ZBA8\",\"dialogItems\":\"Dialogs_dialogItems__3Uifn\",\"dialog\":\"Dialogs_dialog__2c-X4\",\"active\":\"Dialogs_active__3maXL\",\"messages\":\"Dialogs_messages__3howh\",\"containera\":\"Dialogs_containera__KJqUT\",\"containerb\":\"Dialogs_containerb__VkpNu\",\"inMessage\":\"Dialogs_inMessage__3vPwl\",\"outMessage\":\"Dialogs_outMessage__1rR4Y\",\"inMessageContain\":\"Dialogs_inMessageContain__3grdp\",\"outMessageContain\":\"Dialogs_outMessageContain__3H_uI\",\"dialogTextArea\":\"Dialogs_dialogTextArea__2Zpx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Myposts_postsBlock__3ARlk\",\"posts\":\"Myposts_posts__38WJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__3su8i\",\"profileInfoImg\":\"ProfileInfo_profileInfoImg__1rrfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__pXIhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2uG6t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__23BLp\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {DialogPageReducerType, dialogReducer} from \"./dialogReducer\";\r\nimport {ProfilePageReducerType,profileReducer} from \"./profileReducer\";\r\nimport {navbarReducer} from \"./navbarReducer\";\r\n\r\nexport type newTextPostValueType = string\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likesAmount: number\r\n    urlImage: string\r\n}\r\nexport type DialogItemType = {\r\n    id: number\r\n    name: string\r\n    urlImage: string\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type FriendsType = {\r\n    id: number\r\n    name: string\r\n    urlImage: string\r\n\r\n}\r\nexport type SideBarType = {\r\n    friends: Array<FriendsType>\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    newTextPostValue: string\r\n}\r\nexport type DialogPageType = {\r\n    dialogs: Array<DialogItemType>\r\n    inMessages: Array<MessageType>\r\n    outMessages: Array<MessageType>\r\n    newOutMessageText: string\r\n}\r\nexport type RootStateType = {\r\n    profilePageState: ProfilePageType\r\n    dialogsPageState: DialogPageType\r\n    sideBarState: SideBarType\r\n}\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    addNewPost: (postMessage: string) => void\r\n    changeValuePost: (newText: string) => void\r\n    addOutMessage: (newOutMessageText: string) => void\r\n    changeValueOutMessage: (newText: string) => void\r\n    subscriber: (observer: () => void) => void\r\n    _callSubscriber: () => void\r\n    getState: () => RootStateType\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\nexport type ActionsTypes = DialogPageReducerType | ProfilePageReducerType\r\n\r\n\r\n\r\n\r\nexport let store: StoreType = {\r\n    _state: {\r\n        profilePageState: {\r\n            posts: [\r\n                {\r\n                    id: 1,\r\n                    message: \"Hi, how are you?\",\r\n                    likesAmount: 45,\r\n                    urlImage: \"https://bohnice.cz/wp-content/uploads/2020/05/avatarka.jpg\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    message: \"What is your name?\",\r\n                    likesAmount: 24,\r\n                    urlImage: \"https://bohnice.cz/wp-content/uploads/2020/05/avatarka.jpg\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    message: \"What is your favorite TV-show?\",\r\n                    likesAmount: 56,\r\n                    urlImage: \"https://bohnice.cz/wp-content/uploads/2020/05/avatarka.jpg\"\r\n                },\r\n            ],\r\n            newTextPostValue: \"\"\r\n\r\n        },\r\n        dialogsPageState: {\r\n            dialogs: [\r\n                {\r\n                    id: 1,\r\n                    name: \"Andrey\",\r\n                    urlImage: \"https://pbs.twimg.com/profile_images/488616487197106177/xIFT8idk.jpeg\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: \"Sasha\",\r\n                    urlImage: \"https://i.pinimg.com/originals/d5/28/70/d52870bf3c60d63d304a589f395e6a86.png\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: \"Sveta\",\r\n                    urlImage: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTE1vTzqH-MVVPtDn_aoZ-5Jm_ibot1uqH9VQ&usqp=CAU\"\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: \"Nastya\",\r\n                    urlImage: \"https://i.pinimg.com/originals/fa/53/2d/fa532da807474b076afdfad93565e447.jpg\"\r\n                },\r\n                {\r\n                    id: 5,\r\n                    name: \"Tanya\",\r\n                    urlImage: \"https://i.pinimg.com/originals/19/5a/51/195a519a5dff6fb6495d2b1ea7176240.jpg\"\r\n                },\r\n                {\r\n                    id: 6,\r\n                    name: \"Alex\",\r\n                    urlImage: \"https://previews.123rf.com/images/sudowoodo/sudowoodo1706/sudowoodo170600033/80907546-green-alien-face-emoji-extraterrestrial-humanoid-head-icon-vector-illustration-.jpg\"\r\n                }\r\n            ],\r\n            inMessages: [\r\n                {id: 1, message: \"Hi\"},\r\n                {id: 2, message: \"How are you?\"},\r\n                {id: 3, message: \"Where are you from?\"},\r\n                {id: 4, message: \"Where are you?\"},\r\n            ],\r\n            outMessages: [\r\n                {id: 1, message: \"Hi\"},\r\n                {id: 2, message: \"How are you?\"},\r\n                {id: 3, message: \"Where are you from?\"},\r\n                {id: 4, message: \"Where are youu?\"},\r\n            ],\r\n            newOutMessageText: \"\"\r\n        },\r\n        sideBarState: {\r\n            friends: [\r\n                {\r\n                    id: 1,\r\n                    name: \"Andrey\",\r\n                    urlImage: \"https://pbs.twimg.com/profile_images/488616487197106177/xIFT8idk.jpeg\"\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: \"Sasha\",\r\n                    urlImage: \"https://i.pinimg.com/originals/d5/28/70/d52870bf3c60d63d304a589f395e6a86.png\"\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: \"Sveta\",\r\n                    urlImage: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTE1vTzqH-MVVPtDn_aoZ-5Jm_ibot1uqH9VQ&usqp=CAU\"\r\n                },\r\n            ]\r\n        }\r\n\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    addNewPost(postMessage) {\r\n        let newPost: PostType = {\r\n            id: 4,\r\n            message: postMessage,\r\n            likesAmount: 0,\r\n            urlImage: \"https://bohnice.cz/wp-content/uploads/2020/05/avatarka.jpg\"\r\n        }\r\n        this._state.profilePageState.posts.push(newPost)\r\n        this.changeValuePost('')\r\n        this._callSubscriber()\r\n\r\n    },\r\n    changeValuePost(newText) {\r\n\r\n        this._state.profilePageState.newTextPostValue = newText\r\n        this._callSubscriber()\r\n    },\r\n    addOutMessage(newOutMessageText) {\r\n        let newMessage: MessageType = {\r\n            id: 4,\r\n            message: newOutMessageText\r\n        }\r\n        this._state.dialogsPageState.outMessages.push(newMessage)\r\n        this.changeValueOutMessage('')\r\n        this._callSubscriber()\r\n    },\r\n    changeValueOutMessage(newText) {\r\n\r\n        this._state.dialogsPageState.newOutMessageText = newText\r\n        this._callSubscriber()\r\n    },\r\n    subscriber(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n    _callSubscriber() {},\r\n    dispatch(action) {\r\n        this._state.dialogsPageState = dialogReducer(this._state.dialogsPageState, action)\r\n        this._state.profilePageState = profileReducer(this._state.profilePageState, action)\r\n        this._state.sideBarState = navbarReducer(this._state.sideBarState, action)\r\n        this._callSubscriber()\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default store;","import {ActionsTypes, DialogPageType, MessageType} from \"./state\";\r\n\r\n\r\nexport type DialogPageReducerType = ReturnType<typeof AddOutMessageCreator> |\r\n    ReturnType<typeof ChangeOutMessageCreator>\r\n\r\n\r\nconst ADD_OUT_MESSAGE = \"ADD-OUT-MESSAGE\"\r\nconst CHANGE_VALUE_OUT_MESSAGE = \"CHANGE-VALUE-OUT-MESSAGE\"\r\n\r\nexport const AddOutMessageCreator = (newMessage: string) =>\r\n    ({type: ADD_OUT_MESSAGE, newOutMessageText: newMessage}) as const;\r\nexport const ChangeOutMessageCreator = (newText: string) =>\r\n    ({type: CHANGE_VALUE_OUT_MESSAGE, newText: newText}) as const;\r\n\r\n\r\nexport const dialogReducer = (state:DialogPageType, action:ActionsTypes):DialogPageType => {\r\n    switch (action.type) {\r\n        case \"ADD-OUT-MESSAGE\":\r\n            let newMessage: MessageType = {\r\n                id: 4,\r\n                message: action.newOutMessageText\r\n            }\r\n            state.outMessages.push(newMessage)\r\n            state.newOutMessageText = ''\r\n            return state;\r\n        case \"CHANGE-VALUE-OUT-MESSAGE\":\r\n            state.newOutMessageText = action.newText\r\n            return state;\r\n        default: return state\r\n    }\r\n\r\n}","import {ActionsTypes, PostType, ProfilePageType} from \"./state\";\r\n\r\n\r\nexport type ProfilePageReducerType= ReturnType<typeof AddPostCreator> | ReturnType<typeof ChangePostCreator>\r\n\r\nconst ADD_POST = \"ADD-POST\"\r\nconst CHANGE_VALUE_POST = \"CHANGE-VALUE-POST\"\r\n\r\nexport const AddPostCreator = (newPostElement: string) =>\r\n    ({type: ADD_POST, postMessage: newPostElement}) as const;\r\nexport const ChangePostCreator = (newText: string) =>\r\n    ({type: CHANGE_VALUE_POST, newText: newText}) as const;\r\n\r\nexport const profileReducer = (state: ProfilePageType, action: ActionsTypes): ProfilePageType => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            let newPost: PostType = {\r\n                id: 4,\r\n                message: action.postMessage,\r\n                likesAmount: 0,\r\n                urlImage: \"https://bohnice.cz/wp-content/uploads/2020/05/avatarka.jpg\"\r\n            }\r\n            state.posts.push(newPost)\r\n            state.newTextPostValue = ''\r\n            return state;\r\n        case \"CHANGE-VALUE-POST\":\r\n            state.newTextPostValue = action.newText\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import {SideBarType} from \"./state\";\r\n\r\n\r\nexport const navbarReducer = (state:SideBarType, action:any):SideBarType => {\r\n    return state\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return(\r\n    <header className={s.header}>\r\n        <img src=\"https://cdn.logo.com/hotlink-ok/logo-social-sq.png\"/>\r\n    </header>)\r\n}\r\n\r\nexport default Header","import s from \"./Navbar.module.css\";\r\nimport React from \"react\";\r\nimport {FriendsType} from \"../../redux/state\";\r\n\r\n\r\ntype FriendsPropsType = {\r\n    friends:Array<FriendsType>\r\n}\r\n\r\n\r\n\r\nconst Friends:React.FC<FriendsPropsType> = (props) => {\r\n\r\n   let friendsElement = props.friends.map(f => <Friend key={f.id} id={f.id} name={f.name} urlImage={f.urlImage}/> )\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.friendsItem}>\r\n                Friends\r\n            </div>\r\n            <div>\r\n                {friendsElement}\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n\r\nconst Friend:React.FC<FriendsType> = (props) => {\r\n    return (\r\n        <div className={s.friendsBlock}>\r\n            <div className={s.imgFriendsBlock}>\r\n                <img src={props.urlImage}/>\r\n            </div>\r\n            <div className={s.nameFriendsBlock}>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Friends\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Navbar.module.css'\r\nimport Friends from \"./Friends\";\r\nimport { SideBarType } from \"../../redux/state\";\r\n\r\ntype NavbarPropsType = {\r\n    sideBarState:SideBarType\r\n}\r\n\r\nconst Navbar:React.FC<NavbarPropsType> = (props) => {\r\n    return (\r\n\r\n            <nav className={s.navLinkPages}>\r\n                <div className={s.item}>\r\n                    <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to='/dialogs' activeClassName={s.active}>Message</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to='/news' activeClassName={s.active}>News</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to='/music' activeClassName={s.active}>Music</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.settingItem}`}>\r\n                    <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n                </div>\r\n                <div className={s.navFriends}>\r\n                <Friends friends = {props.sideBarState.friends}/>\r\n                </div>\r\n            </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import s from \"./Post.module.css\";\r\nimport React from \"react\";\r\nimport { PostType } from \"../../../../redux/state\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Post:React.FC<PostType> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.urlImage}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span>\r\n                <span> {props.likesAmount}</span>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Post","import s from \"./Myposts.module.css\"\r\nimport React, {ChangeEvent, RefObject} from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport {ActionsTypes, PostType} from \"../../../redux/state\";\r\nimport {AddPostCreator, ChangePostCreator} from \"../../../redux/profileReducer\";\r\n\r\ntype MypostPropsType ={\r\n    posts:Array<PostType>\r\n    newTextPostValue:string\r\n    dispatch:(action:ActionsTypes)=>void\r\n}\r\n\r\n\r\nconst Myposts:React.FC<MypostPropsType> = (props) => {\r\n\r\n    let postElements = props.posts.map(p => <Post key={p.id} id ={p.id} message={p.message} likesAmount={p.likesAmount} urlImage={p.urlImage}/> )\r\n\r\n\r\n    const newPostHandler = () => {\r\n        let newPostElement= props.newTextPostValue\r\n        if(newPostElement) {\r\n            props.dispatch(AddPostCreator(newPostElement))\r\n        }\r\n    }\r\n\r\n    const onChangePostHandler = (e:ChangeEvent<HTMLTextAreaElement>)=>{\r\n        props.dispatch(ChangePostCreator(e.currentTarget.value))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea value={props.newTextPostValue}\r\n                              onChange={onChangePostHandler}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button onClick={newPostHandler} >Add post</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default Myposts","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\n\r\nconst  ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div className={s.profileInfoImg}>\r\n                <img src='https://draft.gr/wp-content/uploads/sites/56/2018/12/1200-x-300-website-sliders-china-man.jpg'/>\r\n            </div>\r\n            <div className={s.profileInfoBlock}>\r\n                ava + discription\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport Myposts from \"./Mypost/Myposts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ActionsTypes, newTextPostValueType, ProfilePageType} from \"../../redux/state\";\r\n\r\ntype ProfilePropsType={\r\n    profilePageState:ProfilePageType\r\n    newTextPostValue:string\r\n    dispatch:(action:ActionsTypes)=>void\r\n\r\n}\r\n\r\n\r\nconst Profile:React.FC<ProfilePropsType> = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo/>\r\n            <Myposts\r\n                posts={props.profilePageState.posts}\r\n                newTextPostValue={props.newTextPostValue}\r\n                dispatch = {props.dispatch}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogItemType} from \"../../../redux/state\";\r\n\r\n\r\nconst DialogItem:React.FC<DialogItemType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.active}>\r\n                <img src={props.urlImage}/>\r\n                {props.name}\r\n            </NavLink>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {MessageType} from \"../../../redux/state\";\r\n\r\n\r\ntype MessagePropsType ={\r\n    inMessages:Array<MessageType>\r\n    outMessages:Array<MessageType>\r\n\r\n}\r\n\r\n\r\nexport const InMessage:React.FC<MessageType> = (props) => {\r\n    return (\r\n        <div className={s.containera}>\r\n        <div className={s.inMessageContain}>\r\n            <div className={s.inMessage}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const OutMessage:React.FC<MessageType> = (props) => {\r\n    return (\r\n        <div className={s.containerb}>\r\n        <div className={s.outMessageContain}>\r\n            <div className={s.outMessage}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent, RefObject} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {ActionsTypes,DialogPageType} from \"../../redux/state\";\r\nimport {InMessage, OutMessage} from './Message/Message';\r\nimport {AddOutMessageCreator, ChangeOutMessageCreator} from \"../../redux/dialogReducer\";\r\n\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPageState: DialogPageType\r\n    newOutMessageText: string\r\n    dispatch: (action: ActionsTypes) => void\r\n}\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    let outMessagesElements = props.dialogsPageState.outMessages.map(m =>\r\n        <OutMessage key={m.id} message={m.message} id={m.id}/>)\r\n    let inMessagesElement = props.dialogsPageState.inMessages.map(m =>\r\n        <InMessage key={m.id} message={m.message} id={m.id}/>)\r\n    let dialogElements = props.dialogsPageState.dialogs.map(d =>\r\n        <DialogItem key={d.id} id={d.id} name={d.name} urlImage={d.urlImage}/>)\r\n\r\n\r\n    const addOutMessageHandler = () => {\r\n        let newMessage = props.newOutMessageText\r\n        if (newMessage) {\r\n            props.dispatch(AddOutMessageCreator(newMessage))\r\n        }\r\n    }\r\n\r\n    const outMessageChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.dispatch(ChangeOutMessageCreator(e.currentTarget.value))\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {inMessagesElement}\r\n                {outMessagesElements}\r\n                <div className={s.dialogTextArea}>\r\n                    <textarea value={props.newOutMessageText} onChange={outMessageChangeHandler}\r\n                              placeholder={\"Enter your message \"}/>\r\n                    <div>\r\n                        <button onClick={addOutMessageHandler}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Music","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default News","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Settings","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport {Route} from \"react-router-dom\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport {ActionsTypes, RootStateType} from \"./redux/state\";\n\ntype AppPropsType ={\n    state:RootStateType\n    dispatch:(action:ActionsTypes)=>void\n\n}\n\nconst App:React.FC<AppPropsType> = (props) => {\n\n\n    return (\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar sideBarState={props.state.sideBarState}/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={ () => <Dialogs\n                        dialogsPageState={props.state.dialogsPageState}\n                        newOutMessageText={props.state.dialogsPageState.newOutMessageText}\n                        dispatch = {props.dispatch}\n\n                    />}/>\n                    <Route path='/profile' render={ () => <Profile\n                        profilePageState={props.state.profilePageState}\n                        newTextPostValue={props.state.profilePageState.newTextPostValue}\n                        dispatch = {props.dispatch}\n                    />}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={ ()=> <Settings/>}/>\n\n                </div>\n            </div>\n    )\n}\n\n\nexport default App;\n","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store, {RootStateType} from './redux/state';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nlet rerenderEntireTree = ()=>{\n    ReactDOM.render(\n        <BrowserRouter>\n            <React.StrictMode>\n                <App\n                    state={store.getState()}\n                    dispatch={store.dispatch.bind(store)}\n\n                />\n            </React.StrictMode>\n        </BrowserRouter>,\n        document.getElementById('root')\n    );\n}\n\n\nrerenderEntireTree();\nstore.subscriber(rerenderEntireTree)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}